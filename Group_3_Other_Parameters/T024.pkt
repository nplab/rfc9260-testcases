// Test Case Title : Stream Identifier
// Test Case ID: T024
// RFC Ref: 6.5 - Stream Identifier and Stream Sequence Number - (Version 2)
//
// If an Endpoint receives a DATA chunk with an invalid stream identifier, it SHOULD acknowledge the reception of the DATA chunk following the normal procedure,
// immediately send an ERROR chunk with cause set to "Invalid Stream Identifier" and discard the Data chunk. 
// The endpoint MAY bundle the ERROR chunk and the SACK chunk in the same packet.
//

--tolerance_usecs=75000

#ifdef FreeBSD
 0.0 `kldload -n sctp`
+0.0 `sysctl -w net.inet.sctp.ecn_enable=0`
+0.0 `sysctl -w net.inet.sctp.pr_enable=0`
+0.0 `sysctl -w net.inet.sctp.asconf_enable=0`
+0.0 `sysctl -w net.inet.sctp.auth_enable=0`
+0.0 `sysctl -w net.inet.sctp.reconfig_enable=0`
+0.0 `sysctl -w net.inet.sctp.nrsack_enable=0`
+0.0 `sysctl -w net.inet.sctp.pktdrop_enable=0`
#endif
#ifdef Linux
 0.0 `modprobe sctp`
+0.0 `sysctl -w net.sctp.ecn_enable=0`
+0.0 `sysctl -w net.sctp.prsctp_enable=0`
#endif

+0.0 socket(..., SOCK_STREAM, IPPROTO_SCTP) = 3
+0.0 bind(3, ..., ...) = 0
+0.0 fcntl(3, F_GETFL) = 0x2 (flags O_RDWR)
+0.0 fcntl(3, F_SETFL, O_RDWR|O_NONBLOCK) = 0
+0.0 connect(3, ..., ...) = -1 EINPROGRESS (Operation now in progress)

+0.0 > sctp: INIT[flgs=0, tag=1, a_rwnd=..., os=..., is=..., tsn=0,
                  SUPPORTED_ADDRESS_TYPES[types=...]]
+0.0 < sctp: INIT_ACK[flgs=0, tag=3, a_rwnd=1500, os=1, is=1, tsn=3,
                      STATE_COOKIE[len=4, val=...]]
+0.0 > sctp: COOKIE_ECHO[flgs=0, len=4, val=...]
+0.0 < sctp: COOKIE_ACK[flgs=0]
+0.0 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
+0.5 < sctp: HEARTBEAT[flgs=0, HEARTBEAT_INFORMATION[len=8, val=...]]
+0.0 > sctp: HEARTBEAT_ACK[flgs=0, HEARTBEAT_INFORMATION[len=8, val=...]]

// Test: DATA chunk with invalid stream identifier, if contains send ERROR chunk with "Invalid Stream Identifier"; can be bundled with SACK.
+0.0 < sctp: DATA[flgs=BE, len=1016, tsn=3, sid=255, ssn=0, ppid=0]
+0.0 > sctp: ERROR[flgs=0, INVALID_STREAM_IDENTIFIER[sid=255]];
			 SACK[flgs=..., cum_tsn=3, a_rwnd=..., gaps=..., dups=...]

+0.0 getsockopt(3, SOL_SOCKET, SO_ERROR, [0], [4]) = 0
//
// Tear down the association
+0.0 close(3) = 0
+0.0 > sctp: SHUTDOWN[flgs=0, cum_tsn=3]
+0.0 < sctp: SHUTDOWN_ACK[flgs=0]
+0.0 > sctp: SHUTDOWN_COMPLETE[flgs=0]
